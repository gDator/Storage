# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win64
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = clang
endif
ifeq ($(origin CXX), default)
  CXX = clang++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
DEFINES += -DENGLISH -DDEBUG
INCLUDES += -Iinclude -Ivendor/imgui/include -Ivendor/cpr/include -Ivendor/Logger -Ivendor/stb -ID:/DEV/boost_1_82_0 -Ivendor/GL -Ivendor/sqlite -Ivendor -Ivendor/simpleini
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LDDEPS +=
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug_win64)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.exe
OBJDIR = obj/Win64/Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -g3 -fdata-sections -ffunction-sections
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -g3 -fdata-sections -ffunction-sections
LIBS += -lglew32s -lopengl32 -lole32 -loleaut32 -limm32 -lversion -liconv -lpthread -lz -lsqlite3 -lSQLiteCpp -lcomdlg32 -lgdi32 -lglfw3 -lboost_log-mt-x64 -lboost_thread-mt-x64 -lboost_regex-mt-x64 -lboost_filesystem-mt-x64 -lboost_log_setup-mt-x64 -lboost_atomic-mt-x64 -lboost_chrono-mt-x64 -lcurl -lcpr -lshell32
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -L/usr/lib64 -m64
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),debug_static)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.lib
OBJDIR = obj/Static/Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g -g3 -fdata-sections -ffunction-sections
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g -g3 -fdata-sections -ffunction-sections
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)

else ifeq ($(config),debug_shared)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.exe
OBJDIR = obj/Shared/Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -g -g3 -fdata-sections -ffunction-sections
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -g -g3 -fdata-sections -ffunction-sections
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),debug_linux)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage
OBJDIR = obj/Linux/Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g -g3 -fdata-sections -ffunction-sections
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -g3 -fdata-sections -ffunction-sections
LIBS += -lglew32s -lpthread -lsqlite3 -lSQLiteCpp -lglfw3 -lboost_log -lboost_thread -lboost_regex -lboost_filesystem -lboost_log_setup -lboost_atomic -lboost_chrono
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -L/usr/lib64 -m64
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),release_win64)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.exe
OBJDIR = obj/Win64/Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
LIBS += -lglew32s -lopengl32 -lole32 -loleaut32 -limm32 -lversion -liconv -lpthread -lz -lsqlite3 -lSQLiteCpp -lcomdlg32 -lgdi32 -lglfw3 -lboost_log-mt-x64 -lboost_thread-mt-x64 -lboost_regex-mt-x64 -lboost_filesystem-mt-x64 -lboost_log_setup-mt-x64 -lboost_atomic-mt-x64 -lboost_chrono-mt-x64 -lcurl -lcpr -lshell32
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -L/usr/lib64 -m64 -mwindows -fno-exceptions -fno-rtti -fPIC
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),release_static)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.lib
OBJDIR = obj/Static/Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -fno-exceptions -fno-rtti -fPIC
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)

else ifeq ($(config),release_shared)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage.exe
OBJDIR = obj/Shared/Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
LIBS +=
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -mwindows -fno-exceptions -fno-rtti -fPIC
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

else ifeq ($(config),release_linux)
TARGETDIR = .
TARGET = $(TARGETDIR)/storage
OBJDIR = obj/Linux/Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -fdata-sections -ffunction-sections -m64 -Wall -Wextra -pthread
LIBS += -lglew32s -lpthread -lsqlite3 -lSQLiteCpp -lglfw3 -lboost_log -lboost_thread -lboost_regex -lboost_filesystem -lboost_log_setup -lboost_atomic -lboost_chrono
ALL_LDFLAGS += $(LDFLAGS) -Llib -LD:/DEV/boost_1_82_0/stage/lib -L/usr/lib64 -m64 -fno-exceptions -fno-rtti -fPIC
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)

endif

# Per File Configurations
# #############################################

PERFILE_FLAGS_0 = $(ALL_CXXFLAGS) -std=c++17

# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/CSV.o
GENERATED += $(OBJDIR)/Console.o
GENERATED += $(OBJDIR)/ConvertUTF.o
GENERATED += $(OBJDIR)/FileDialog.o
GENERATED += $(OBJDIR)/GuiDatabase.o
GENERATED += $(OBJDIR)/GuiTable.o
GENERATED += $(OBJDIR)/Item.o
GENERATED += $(OBJDIR)/ItemDatabase.o
GENERATED += $(OBJDIR)/ProgramStateDatabase.o
GENERATED += $(OBJDIR)/WebConnection.o
GENERATED += $(OBJDIR)/imgui.o
GENERATED += $(OBJDIR)/imgui_demo.o
GENERATED += $(OBJDIR)/imgui_draw.o
GENERATED += $(OBJDIR)/imgui_impl_glfw.o
GENERATED += $(OBJDIR)/imgui_impl_opengl3.o
GENERATED += $(OBJDIR)/imgui_spectrum.o
GENERATED += $(OBJDIR)/imgui_stdlib.o
GENERATED += $(OBJDIR)/imgui_tables.o
GENERATED += $(OBJDIR)/imgui_widgets.o
GENERATED += $(OBJDIR)/implot.o
GENERATED += $(OBJDIR)/implot_demo.o
GENERATED += $(OBJDIR)/implot_items.o
GENERATED += $(OBJDIR)/logger.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/program.o
GENERATED += $(OBJDIR)/utils.o
OBJECTS += $(OBJDIR)/CSV.o
OBJECTS += $(OBJDIR)/Console.o
OBJECTS += $(OBJDIR)/ConvertUTF.o
OBJECTS += $(OBJDIR)/FileDialog.o
OBJECTS += $(OBJDIR)/GuiDatabase.o
OBJECTS += $(OBJDIR)/GuiTable.o
OBJECTS += $(OBJDIR)/Item.o
OBJECTS += $(OBJDIR)/ItemDatabase.o
OBJECTS += $(OBJDIR)/ProgramStateDatabase.o
OBJECTS += $(OBJDIR)/WebConnection.o
OBJECTS += $(OBJDIR)/imgui.o
OBJECTS += $(OBJDIR)/imgui_demo.o
OBJECTS += $(OBJDIR)/imgui_draw.o
OBJECTS += $(OBJDIR)/imgui_impl_glfw.o
OBJECTS += $(OBJDIR)/imgui_impl_opengl3.o
OBJECTS += $(OBJDIR)/imgui_spectrum.o
OBJECTS += $(OBJDIR)/imgui_stdlib.o
OBJECTS += $(OBJDIR)/imgui_tables.o
OBJECTS += $(OBJDIR)/imgui_widgets.o
OBJECTS += $(OBJDIR)/implot.o
OBJECTS += $(OBJDIR)/implot_demo.o
OBJECTS += $(OBJDIR)/implot_items.o
OBJECTS += $(OBJDIR)/logger.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/program.o
OBJECTS += $(OBJDIR)/utils.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking STORAGE
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning STORAGE
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/CSV.o: src/CSV.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Console.o: src/Console.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FileDialog.o: src/FileDialog.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GuiDatabase.o: src/Gui/GuiDatabase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GuiTable.o: src/Gui/GuiTable.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Item.o: src/Item.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ItemDatabase.o: src/ItemDatabase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ProgramStateDatabase.o: src/ProgramStateDatabase.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WebConnection.o: src/WebConnection.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/program.o: src/program.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utils.o: src/utils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/logger.o: vendor/Logger/logger.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui.o: vendor/imgui/src/imgui.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_demo.o: vendor/imgui/src/imgui_demo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: vendor/imgui/src/imgui_draw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_glfw.o: vendor/imgui/src/imgui_impl_glfw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_opengl3.o: vendor/imgui/src/imgui_impl_opengl3.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_spectrum.o: vendor/imgui/src/imgui_spectrum.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_stdlib.o: vendor/imgui/src/imgui_stdlib.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: vendor/imgui/src/imgui_tables.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: vendor/imgui/src/imgui_widgets.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/implot.o: vendor/imgui/src/implot.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/implot_demo.o: vendor/imgui/src/implot_demo.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/implot_items.o: vendor/imgui/src/implot_items.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(PERFILE_FLAGS_0) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ConvertUTF.o: vendor/simpleini/ConvertUTF.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif